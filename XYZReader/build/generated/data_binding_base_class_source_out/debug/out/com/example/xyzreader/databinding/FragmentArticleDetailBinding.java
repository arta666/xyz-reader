// Generated by view binder compiler. Do not edit!
package com.example.xyzreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import com.example.xyzreader.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentArticleDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final AppBarLayout appbar;

  @NonNull
  public final TextView articleBody;

  @NonNull
  public final TextView articleByline;

  @NonNull
  public final TextView articleTitle;

  @NonNull
  public final Toolbar detailToolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout detailsTextContainer;

  @NonNull
  public final CoordinatorLayout drawInsetsFrameLayout;

  @NonNull
  public final LinearLayout metaBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final AppBarLayout parallaxBar;

  @NonNull
  public final FrameLayout photoContainer;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final FloatingActionButton shareFab;

  @NonNull
  public final ImageView thumbnail;

  @NonNull
  public final CollapsingToolbarLayout toolbar;

  private FragmentArticleDetailBinding(@NonNull CoordinatorLayout rootView,
      @Nullable AppBarLayout appbar, @NonNull TextView articleBody, @NonNull TextView articleByline,
      @NonNull TextView articleTitle, @NonNull Toolbar detailToolbar,
      @Nullable LinearLayout detailsTextContainer, @NonNull CoordinatorLayout drawInsetsFrameLayout,
      @NonNull LinearLayout metaBar, @Nullable AppBarLayout parallaxBar,
      @NonNull FrameLayout photoContainer, @NonNull NestedScrollView scrollView,
      @NonNull FloatingActionButton shareFab, @NonNull ImageView thumbnail,
      @NonNull CollapsingToolbarLayout toolbar) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.articleBody = articleBody;
    this.articleByline = articleByline;
    this.articleTitle = articleTitle;
    this.detailToolbar = detailToolbar;
    this.detailsTextContainer = detailsTextContainer;
    this.drawInsetsFrameLayout = drawInsetsFrameLayout;
    this.metaBar = metaBar;
    this.parallaxBar = parallaxBar;
    this.photoContainer = photoContainer;
    this.scrollView = scrollView;
    this.shareFab = shareFab;
    this.thumbnail = thumbnail;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_article_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentArticleDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      AppBarLayout appbar = rootView.findViewById(R.id.appbar);

      id = R.id.article_body;
      TextView articleBody = rootView.findViewById(id);
      if (articleBody == null) {
        break missingId;
      }

      id = R.id.article_byline;
      TextView articleByline = rootView.findViewById(id);
      if (articleByline == null) {
        break missingId;
      }

      id = R.id.article_title;
      TextView articleTitle = rootView.findViewById(id);
      if (articleTitle == null) {
        break missingId;
      }

      id = R.id.detail_toolbar;
      Toolbar detailToolbar = rootView.findViewById(id);
      if (detailToolbar == null) {
        break missingId;
      }

      LinearLayout detailsTextContainer = rootView.findViewById(R.id.details_text_container);

      CoordinatorLayout drawInsetsFrameLayout = (CoordinatorLayout) rootView;

      id = R.id.meta_bar;
      LinearLayout metaBar = rootView.findViewById(id);
      if (metaBar == null) {
        break missingId;
      }

      AppBarLayout parallaxBar = rootView.findViewById(R.id.parallax_bar);

      id = R.id.photo_container;
      FrameLayout photoContainer = rootView.findViewById(id);
      if (photoContainer == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = rootView.findViewById(id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.share_fab;
      FloatingActionButton shareFab = rootView.findViewById(id);
      if (shareFab == null) {
        break missingId;
      }

      id = R.id.thumbnail;
      ImageView thumbnail = rootView.findViewById(id);
      if (thumbnail == null) {
        break missingId;
      }

      id = R.id.toolbar;
      CollapsingToolbarLayout toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentArticleDetailBinding((CoordinatorLayout) rootView, appbar, articleBody,
          articleByline, articleTitle, detailToolbar, detailsTextContainer, drawInsetsFrameLayout,
          metaBar, parallaxBar, photoContainer, scrollView, shareFab, thumbnail, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
